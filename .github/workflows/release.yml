name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'john-psina'
    outputs:
      released: ${{ steps.check_release.outputs.released }}
      version: ${{ steps.check_release.outputs.version }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version
        id: before_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' pyproject.toml || echo "0.0.0")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Semantic Release
        id: semantic
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release version
          semantic-release publish

      - name: Check if version changed
        id: check_release
        run: |
          BEFORE="${{ steps.before_version.outputs.version }}"
          AFTER=$(grep -Po '(?<=^version = ")[^"]*' pyproject.toml || echo "0.0.0")

          if [[ "$BEFORE" != "$AFTER" ]]; then
            echo "released=true" >> $GITHUB_OUTPUT
            echo "version=$AFTER" >> $GITHUB_OUTPUT
            echo "New release: $BEFORE -> $AFTER"
          else
            echo "released=false" >> $GITHUB_OUTPUT
            echo "No release: version unchanged at $BEFORE"
          fi

  publish-pypi:
    name: Publish to PyPI
    needs: release
    if: needs.release.outputs.released == 'true'
    uses: ./.github/workflows/publish-pypi.yml
    permissions:
      contents: read
      id-token: write

